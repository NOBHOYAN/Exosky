import*as T from"https://cdn.jsdelivr.net/npm/three@0.112/build/three.module.js";import{OrbitControls as Hi}from"https://unpkg.com/three@0.112/examples/jsm/controls/OrbitControls.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const r of s)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function e(s){const r={};return s.integrity&&(r.integrity=s.integrity),s.referrerPolicy&&(r.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?r.credentials="include":s.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(s){if(s.ep)return;s.ep=!0;const r=e(s);fetch(s.href,r)}})();/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const vi="169",je=0,ji=1,Xi=0,Ke=1,$i=2,ti=100,ei=204,ii=205,si=3,Yi=0,Bi=300,ri=1e3,ee=1001,ni=1002,Ei=1006,Gi=1008,Zi=1009,Ji=1015,ge=1016,Qi=1023,Ri="",ot="srgb",Je="srgb-linear",Ki="display-p3",Di="display-p3-linear",Xe="linear",ai="srgb",hi="rec709",oi="p3",xt=7680,li=519,ui=35044,Nt=2e3,ci=2001;class Wt{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const s=this._listeners[t];if(s!==void 0){const r=s.indexOf(e);r!==-1&&s.splice(r,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const i=this._listeners[t.type];if(i!==void 0){t.target=this;const s=i.slice(0);for(let r=0,n=s.length;r<n;r++)s[r].call(this,t);t.target=null}}}const k=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function qt(){const m=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(k[m&255]+k[m>>8&255]+k[m>>16&255]+k[m>>24&255]+"-"+k[t&255]+k[t>>8&255]+"-"+k[t>>16&15|64]+k[t>>24&255]+"-"+k[e&63|128]+k[e>>8&255]+"-"+k[e>>16&255]+k[e>>24&255]+k[i&255]+k[i>>8&255]+k[i>>16&255]+k[i>>24&255]).toLowerCase()}function O(m,t,e){return Math.max(t,Math.min(e,m))}function ts(m,t){return(m%t+t)%t}function ze(m,t,e){return(1-e)*m+e*t}function Dt(m,t){switch(t.constructor){case Float32Array:return m;case Uint32Array:return m/4294967295;case Uint16Array:return m/65535;case Uint8Array:return m/255;case Int32Array:return Math.max(m/2147483647,-1);case Int16Array:return Math.max(m/32767,-1);case Int8Array:return Math.max(m/127,-1);default:throw new Error("Invalid component type.")}}function I(m,t){switch(t.constructor){case Float32Array:return m;case Uint32Array:return Math.round(m*4294967295);case Uint16Array:return Math.round(m*65535);case Uint8Array:return Math.round(m*255);case Int32Array:return Math.round(m*2147483647);case Int16Array:return Math.round(m*32767);case Int8Array:return Math.round(m*127);default:throw new Error("Invalid component type.")}}class F{constructor(t=0,e=0){F.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6],this.y=s[1]*e+s[4]*i+s[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(O(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),s=Math.sin(e),r=this.x-t.x,n=this.y-t.y;return this.x=r*i-n*s+t.x,this.y=r*s+n*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class ct{constructor(t,e,i,s,r,n,h,a,o){ct.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,i,s,r,n,h,a,o)}set(t,e,i,s,r,n,h,a,o){const l=this.elements;return l[0]=t,l[1]=s,l[2]=h,l[3]=e,l[4]=r,l[5]=a,l[6]=i,l[7]=n,l[8]=o,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,r=this.elements,n=i[0],h=i[3],a=i[6],o=i[1],l=i[4],u=i[7],c=i[2],d=i[5],f=i[8],p=s[0],y=s[3],g=s[6],w=s[1],S=s[4],M=s[7],_=s[2],A=s[5],b=s[8];return r[0]=n*p+h*w+a*_,r[3]=n*y+h*S+a*A,r[6]=n*g+h*M+a*b,r[1]=o*p+l*w+u*_,r[4]=o*y+l*S+u*A,r[7]=o*g+l*M+u*b,r[2]=c*p+d*w+f*_,r[5]=c*y+d*S+f*A,r[8]=c*g+d*M+f*b,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],s=t[2],r=t[3],n=t[4],h=t[5],a=t[6],o=t[7],l=t[8];return e*n*l-e*h*o-i*r*l+i*h*a+s*r*o-s*n*a}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],r=t[3],n=t[4],h=t[5],a=t[6],o=t[7],l=t[8],u=l*n-h*o,c=h*a-l*r,d=o*r-n*a,f=e*u+i*c+s*d;if(f===0)return this.set(0,0,0,0,0,0,0,0,0);const p=1/f;return t[0]=u*p,t[1]=(s*o-l*i)*p,t[2]=(h*i-s*n)*p,t[3]=c*p,t[4]=(l*e-s*a)*p,t[5]=(s*r-h*e)*p,t[6]=d*p,t[7]=(i*a-o*e)*p,t[8]=(n*e-i*r)*p,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,s,r,n,h){const a=Math.cos(r),o=Math.sin(r);return this.set(i*a,i*o,-i*(a*n+o*h)+n+t,-s*o,s*a,-s*(-o*n+a*h)+h+e,0,0,1),this}scale(t,e){return this.premultiply(Ae.makeScale(t,e)),this}rotate(t){return this.premultiply(Ae.makeRotation(-t)),this}translate(t,e){return this.premultiply(Ae.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<9;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Ae=new ct;function es(m){for(let t=m.length-1;t>=0;--t)if(m[t]>=65535)return!0;return!1}function di(m){return document.createElementNS("http://www.w3.org/1999/xhtml",m)}const mi=new ct().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),fi=new ct().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),kt={[Je]:{transfer:Xe,primaries:hi,luminanceCoefficients:[.2126,.7152,.0722],toReference:m=>m,fromReference:m=>m},[ot]:{transfer:ai,primaries:hi,luminanceCoefficients:[.2126,.7152,.0722],toReference:m=>m.convertSRGBToLinear(),fromReference:m=>m.convertLinearToSRGB()},[Di]:{transfer:Xe,primaries:oi,luminanceCoefficients:[.2289,.6917,.0793],toReference:m=>m.applyMatrix3(fi),fromReference:m=>m.applyMatrix3(mi)},[Ki]:{transfer:ai,primaries:oi,luminanceCoefficients:[.2289,.6917,.0793],toReference:m=>m.convertSRGBToLinear().applyMatrix3(fi),fromReference:m=>m.applyMatrix3(mi).convertLinearToSRGB()}},is=new Set([Je,Di]),W={enabled:!0,_workingColorSpace:Je,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(m){if(!is.has(m))throw new Error(`Unsupported working color space, "${m}".`);this._workingColorSpace=m},convert:function(m,t,e){if(this.enabled===!1||t===e||!t||!e)return m;const i=kt[t].toReference,s=kt[e].fromReference;return s(i(m))},fromWorkingColorSpace:function(m,t){return this.convert(m,this._workingColorSpace,t)},toWorkingColorSpace:function(m,t){return this.convert(m,t,this._workingColorSpace)},getPrimaries:function(m){return kt[m].primaries},getTransfer:function(m){return m===Ri?Xe:kt[m].transfer},getLuminanceCoefficients:function(m,t=this._workingColorSpace){return m.fromArray(kt[t].luminanceCoefficients)}};function vt(m){return m<.04045?m*.0773993808:Math.pow(m*.9478672986+.0521327014,2.4)}function Te(m){return m<.0031308?m*12.92:1.055*Math.pow(m,.41666)-.055}let yt;class ss{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{yt===void 0&&(yt=di("canvas")),yt.width=t.width,yt.height=t.height;const i=yt.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=yt}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=di("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const s=i.getImageData(0,0,t.width,t.height),r=s.data;for(let n=0;n<r.length;n++)r[n]=vt(r[n]/255)*255;return i.putImageData(s,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(vt(e[i]/255)*255):e[i]=vt(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let rs=0;class ki{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:rs++}),this.uuid=qt(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},s=this.data;if(s!==null){let r;if(Array.isArray(s)){r=[];for(let n=0,h=s.length;n<h;n++)s[n].isDataTexture?r.push(Fe(s[n].image)):r.push(Fe(s[n]))}else r=Fe(s);i.url=r}return e||(t.images[this.uuid]=i),i}}function Fe(m){return typeof HTMLImageElement<"u"&&m instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&m instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&m instanceof ImageBitmap?ss.getDataURL(m):m.data?{data:Array.from(m.data),width:m.width,height:m.height,type:m.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let ns=0;class lt extends Wt{constructor(t=lt.DEFAULT_IMAGE,e=lt.DEFAULT_MAPPING,i=ee,s=ee,r=Ei,n=Gi,h=Qi,a=Zi,o=lt.DEFAULT_ANISOTROPY,l=Ri){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:ns++}),this.uuid=qt(),this.name="",this.source=new ki(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=s,this.magFilter=r,this.minFilter=n,this.anisotropy=o,this.format=h,this.internalFormat=null,this.type=a,this.offset=new F(0,0),this.repeat=new F(1,1),this.center=new F(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new ct,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=l,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==Bi)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case ri:t.x=t.x-Math.floor(t.x);break;case ee:t.x=t.x<0?0:1;break;case ni:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case ri:t.y=t.y-Math.floor(t.y);break;case ee:t.y=t.y<0?0:1;break;case ni:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}lt.DEFAULT_IMAGE=null;lt.DEFAULT_MAPPING=Bi;lt.DEFAULT_ANISOTROPY=1;class pt{constructor(t=0,e=0,i=0,s=1){pt.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=s}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,s){return this.x=t,this.y=e,this.z=i,this.w=s,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,r=this.w,n=t.elements;return this.x=n[0]*e+n[4]*i+n[8]*s+n[12]*r,this.y=n[1]*e+n[5]*i+n[9]*s+n[13]*r,this.z=n[2]*e+n[6]*i+n[10]*s+n[14]*r,this.w=n[3]*e+n[7]*i+n[11]*s+n[15]*r,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,s,r;const a=t.elements,o=a[0],l=a[4],u=a[8],c=a[1],d=a[5],f=a[9],p=a[2],y=a[6],g=a[10];if(Math.abs(l-c)<.01&&Math.abs(u-p)<.01&&Math.abs(f-y)<.01){if(Math.abs(l+c)<.1&&Math.abs(u+p)<.1&&Math.abs(f+y)<.1&&Math.abs(o+d+g-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const S=(o+1)/2,M=(d+1)/2,_=(g+1)/2,A=(l+c)/4,b=(u+p)/4,z=(f+y)/4;return S>M&&S>_?S<.01?(i=0,s=.707106781,r=.707106781):(i=Math.sqrt(S),s=A/i,r=b/i):M>_?M<.01?(i=.707106781,s=0,r=.707106781):(s=Math.sqrt(M),i=A/s,r=z/s):_<.01?(i=.707106781,s=.707106781,r=0):(r=Math.sqrt(_),i=b/r,s=z/r),this.set(i,s,r,e),this}let w=Math.sqrt((y-f)*(y-f)+(u-p)*(u-p)+(c-l)*(c-l));return Math.abs(w)<.001&&(w=1),this.x=(y-f)/w,this.y=(u-p)/w,this.z=(c-l)/w,this.w=Math.acos((o+d+g-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class as extends Wt{constructor(t=1,e=1,i={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new pt(0,0,t,e),this.scissorTest=!1,this.viewport=new pt(0,0,t,e);const s={width:t,height:e,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Ei,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const r=new lt(s,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);r.flipY=!1,r.generateMipmaps=i.generateMipmaps,r.internalFormat=i.internalFormat,this.textures=[];const n=i.count;for(let h=0;h<n;h++)this.textures[h]=r.clone(),this.textures[h].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}setSize(t,e,i=1){if(this.width!==t||this.height!==e||this.depth!==i){this.width=t,this.height=e,this.depth=i;for(let s=0,r=this.textures.length;s<r;s++)this.textures[s].image.width=t,this.textures[s].image.height=e,this.textures[s].image.depth=i;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let i=0,s=t.textures.length;i<s;i++)this.textures[i]=t.textures[i].clone(),this.textures[i].isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new ki(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Me extends as{constructor(t=1,e=1,i={}){super(t,e,i),this.isWebGLRenderTarget=!0}}class Ht{constructor(t=0,e=0,i=0,s=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=s}static slerpFlat(t,e,i,s,r,n,h){let a=i[s+0],o=i[s+1],l=i[s+2],u=i[s+3];const c=r[n+0],d=r[n+1],f=r[n+2],p=r[n+3];if(h===0){t[e+0]=a,t[e+1]=o,t[e+2]=l,t[e+3]=u;return}if(h===1){t[e+0]=c,t[e+1]=d,t[e+2]=f,t[e+3]=p;return}if(u!==p||a!==c||o!==d||l!==f){let y=1-h;const g=a*c+o*d+l*f+u*p,w=g>=0?1:-1,S=1-g*g;if(S>Number.EPSILON){const _=Math.sqrt(S),A=Math.atan2(_,g*w);y=Math.sin(y*A)/_,h=Math.sin(h*A)/_}const M=h*w;if(a=a*y+c*M,o=o*y+d*M,l=l*y+f*M,u=u*y+p*M,y===1-h){const _=1/Math.sqrt(a*a+o*o+l*l+u*u);a*=_,o*=_,l*=_,u*=_}}t[e]=a,t[e+1]=o,t[e+2]=l,t[e+3]=u}static multiplyQuaternionsFlat(t,e,i,s,r,n){const h=i[s],a=i[s+1],o=i[s+2],l=i[s+3],u=r[n],c=r[n+1],d=r[n+2],f=r[n+3];return t[e]=h*f+l*u+a*d-o*c,t[e+1]=a*f+l*c+o*u-h*d,t[e+2]=o*f+l*d+h*c-a*u,t[e+3]=l*f-h*u-a*c-o*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,s){return this._x=t,this._y=e,this._z=i,this._w=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,s=t._y,r=t._z,n=t._order,h=Math.cos,a=Math.sin,o=h(i/2),l=h(s/2),u=h(r/2),c=a(i/2),d=a(s/2),f=a(r/2);switch(n){case"XYZ":this._x=c*l*u+o*d*f,this._y=o*d*u-c*l*f,this._z=o*l*f+c*d*u,this._w=o*l*u-c*d*f;break;case"YXZ":this._x=c*l*u+o*d*f,this._y=o*d*u-c*l*f,this._z=o*l*f-c*d*u,this._w=o*l*u+c*d*f;break;case"ZXY":this._x=c*l*u-o*d*f,this._y=o*d*u+c*l*f,this._z=o*l*f+c*d*u,this._w=o*l*u-c*d*f;break;case"ZYX":this._x=c*l*u-o*d*f,this._y=o*d*u+c*l*f,this._z=o*l*f-c*d*u,this._w=o*l*u+c*d*f;break;case"YZX":this._x=c*l*u+o*d*f,this._y=o*d*u+c*l*f,this._z=o*l*f-c*d*u,this._w=o*l*u-c*d*f;break;case"XZY":this._x=c*l*u-o*d*f,this._y=o*d*u-c*l*f,this._z=o*l*f+c*d*u,this._w=o*l*u+c*d*f;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+n)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,s=Math.sin(i);return this._x=t.x*s,this._y=t.y*s,this._z=t.z*s,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],s=e[4],r=e[8],n=e[1],h=e[5],a=e[9],o=e[2],l=e[6],u=e[10],c=i+h+u;if(c>0){const d=.5/Math.sqrt(c+1);this._w=.25/d,this._x=(l-a)*d,this._y=(r-o)*d,this._z=(n-s)*d}else if(i>h&&i>u){const d=2*Math.sqrt(1+i-h-u);this._w=(l-a)/d,this._x=.25*d,this._y=(s+n)/d,this._z=(r+o)/d}else if(h>u){const d=2*Math.sqrt(1+h-i-u);this._w=(r-o)/d,this._x=(s+n)/d,this._y=.25*d,this._z=(a+l)/d}else{const d=2*Math.sqrt(1+u-i-h);this._w=(n-s)/d,this._x=(r+o)/d,this._y=(a+l)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(O(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const s=Math.min(1,e/i);return this.slerp(t,s),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,s=t._y,r=t._z,n=t._w,h=e._x,a=e._y,o=e._z,l=e._w;return this._x=i*l+n*h+s*o-r*a,this._y=s*l+n*a+r*h-i*o,this._z=r*l+n*o+i*a-s*h,this._w=n*l-i*h-s*a-r*o,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,s=this._y,r=this._z,n=this._w;let h=n*t._w+i*t._x+s*t._y+r*t._z;if(h<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,h=-h):this.copy(t),h>=1)return this._w=n,this._x=i,this._y=s,this._z=r,this;const a=1-h*h;if(a<=Number.EPSILON){const d=1-e;return this._w=d*n+e*this._w,this._x=d*i+e*this._x,this._y=d*s+e*this._y,this._z=d*r+e*this._z,this.normalize(),this}const o=Math.sqrt(a),l=Math.atan2(o,h),u=Math.sin((1-e)*l)/o,c=Math.sin(e*l)/o;return this._w=n*u+this._w*c,this._x=i*u+this._x*c,this._y=s*u+this._y*c,this._z=r*u+this._z*c,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),s=Math.sqrt(1-i),r=Math.sqrt(i);return this.set(s*Math.sin(t),s*Math.cos(t),r*Math.sin(e),r*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class x{constructor(t=0,e=0,i=0){x.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(pi.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(pi.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[3]*i+r[6]*s,this.y=r[1]*e+r[4]*i+r[7]*s,this.z=r[2]*e+r[5]*i+r[8]*s,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,s=this.z,r=t.elements,n=1/(r[3]*e+r[7]*i+r[11]*s+r[15]);return this.x=(r[0]*e+r[4]*i+r[8]*s+r[12])*n,this.y=(r[1]*e+r[5]*i+r[9]*s+r[13])*n,this.z=(r[2]*e+r[6]*i+r[10]*s+r[14])*n,this}applyQuaternion(t){const e=this.x,i=this.y,s=this.z,r=t.x,n=t.y,h=t.z,a=t.w,o=2*(n*s-h*i),l=2*(h*e-r*s),u=2*(r*i-n*e);return this.x=e+a*o+n*u-h*l,this.y=i+a*l+h*o-r*u,this.z=s+a*u+r*l-n*o,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,s=this.z,r=t.elements;return this.x=r[0]*e+r[4]*i+r[8]*s,this.y=r[1]*e+r[5]*i+r[9]*s,this.z=r[2]*e+r[6]*i+r[10]*s,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,s=t.y,r=t.z,n=e.x,h=e.y,a=e.z;return this.x=s*a-r*h,this.y=r*n-i*a,this.z=i*h-s*n,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return Ce.copy(this).projectOnVector(t),this.sub(Ce)}reflect(t){return this.sub(Ce.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(O(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,s=this.z-t.z;return e*e+i*i+s*s}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const s=Math.sin(e)*t;return this.x=s*Math.sin(i),this.y=Math.cos(e)*t,this.z=s*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),s=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=s,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Ce=new x,pi=new Ht;class jt{constructor(t=new x(1/0,1/0,1/0),e=new x(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(q.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(q.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=q.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0){const r=i.getAttribute("position");if(e===!0&&r!==void 0&&t.isInstancedMesh!==!0)for(let n=0,h=r.count;n<h;n++)t.isMesh===!0?t.getVertexPosition(n,q):q.fromBufferAttribute(r,n),q.applyMatrix4(t.matrixWorld),this.expandByPoint(q);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),ie.copy(t.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),ie.copy(i.boundingBox)),ie.applyMatrix4(t.matrixWorld),this.union(ie)}const s=t.children;for(let r=0,n=s.length;r<n;r++)this.expandByObject(s[r],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,q),q.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Pt),se.subVectors(this.max,Pt),gt.subVectors(t.a,Pt),Mt.subVectors(t.b,Pt),bt.subVectors(t.c,Pt),st.subVectors(Mt,gt),rt.subVectors(bt,Mt),dt.subVectors(gt,bt);let e=[0,-st.z,st.y,0,-rt.z,rt.y,0,-dt.z,dt.y,st.z,0,-st.x,rt.z,0,-rt.x,dt.z,0,-dt.x,-st.y,st.x,0,-rt.y,rt.x,0,-dt.y,dt.x,0];return!ve(e,gt,Mt,bt,se)||(e=[1,0,0,0,1,0,0,0,1],!ve(e,gt,Mt,bt,se))?!1:(re.crossVectors(st,rt),e=[re.x,re.y,re.z],ve(e,gt,Mt,bt,se))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,q).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(q).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Z[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Z[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Z[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Z[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Z[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Z[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Z[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Z[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Z),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Z=[new x,new x,new x,new x,new x,new x,new x,new x],q=new x,ie=new jt,gt=new x,Mt=new x,bt=new x,st=new x,rt=new x,dt=new x,Pt=new x,se=new x,re=new x,mt=new x;function ve(m,t,e,i,s){for(let r=0,n=m.length-3;r<=n;r+=3){mt.fromArray(m,r);const h=s.x*Math.abs(mt.x)+s.y*Math.abs(mt.y)+s.z*Math.abs(mt.z),a=t.dot(mt),o=e.dot(mt),l=i.dot(mt);if(Math.max(-Math.max(a,o,l),Math.min(a,o,l))>h)return!1}return!0}const hs=new jt,It=new x,Be=new x;class Pi{constructor(t=new x,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):hs.setFromPoints(t).getCenter(i);let s=0;for(let r=0,n=t.length;r<n;r++)s=Math.max(s,i.distanceToSquared(t[r]));return this.radius=Math.sqrt(s),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;It.subVectors(t,this.center);const e=It.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),s=(i-this.radius)*.5;this.center.addScaledVector(It,s/i),this.radius+=s}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Be.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(It.copy(t.center).add(Be)),this.expandByPoint(It.copy(t.center).sub(Be))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const J=new x,Ee=new x,ne=new x,nt=new x,Re=new x,ae=new x,De=new x;class os{constructor(t=new x,e=new x(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,J)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=J.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(J.copy(this.origin).addScaledVector(this.direction,e),J.distanceToSquared(t))}distanceSqToSegment(t,e,i,s){Ee.copy(t).add(e).multiplyScalar(.5),ne.copy(e).sub(t).normalize(),nt.copy(this.origin).sub(Ee);const r=t.distanceTo(e)*.5,n=-this.direction.dot(ne),h=nt.dot(this.direction),a=-nt.dot(ne),o=nt.lengthSq(),l=Math.abs(1-n*n);let u,c,d,f;if(l>0)if(u=n*a-h,c=n*h-a,f=r*l,u>=0)if(c>=-f)if(c<=f){const p=1/l;u*=p,c*=p,d=u*(u+n*c+2*h)+c*(n*u+c+2*a)+o}else c=r,u=Math.max(0,-(n*c+h)),d=-u*u+c*(c+2*a)+o;else c=-r,u=Math.max(0,-(n*c+h)),d=-u*u+c*(c+2*a)+o;else c<=-f?(u=Math.max(0,-(-n*r+h)),c=u>0?-r:Math.min(Math.max(-r,-a),r),d=-u*u+c*(c+2*a)+o):c<=f?(u=0,c=Math.min(Math.max(-r,-a),r),d=c*(c+2*a)+o):(u=Math.max(0,-(n*r+h)),c=u>0?r:Math.min(Math.max(-r,-a),r),d=-u*u+c*(c+2*a)+o);else c=n>0?-r:r,u=Math.max(0,-(n*c+h)),d=-u*u+c*(c+2*a)+o;return i&&i.copy(this.origin).addScaledVector(this.direction,u),s&&s.copy(Ee).addScaledVector(ne,c),d}intersectSphere(t,e){J.subVectors(t.center,this.origin);const i=J.dot(this.direction),s=J.dot(J)-i*i,r=t.radius*t.radius;if(s>r)return null;const n=Math.sqrt(r-s),h=i-n,a=i+n;return a<0?null:h<0?this.at(a,e):this.at(h,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,s,r,n,h,a;const o=1/this.direction.x,l=1/this.direction.y,u=1/this.direction.z,c=this.origin;return o>=0?(i=(t.min.x-c.x)*o,s=(t.max.x-c.x)*o):(i=(t.max.x-c.x)*o,s=(t.min.x-c.x)*o),l>=0?(r=(t.min.y-c.y)*l,n=(t.max.y-c.y)*l):(r=(t.max.y-c.y)*l,n=(t.min.y-c.y)*l),i>n||r>s||((r>i||isNaN(i))&&(i=r),(n<s||isNaN(s))&&(s=n),u>=0?(h=(t.min.z-c.z)*u,a=(t.max.z-c.z)*u):(h=(t.max.z-c.z)*u,a=(t.min.z-c.z)*u),i>a||h>s)||((h>i||i!==i)&&(i=h),(a<s||s!==s)&&(s=a),s<0)?null:this.at(i>=0?i:s,e)}intersectsBox(t){return this.intersectBox(t,J)!==null}intersectTriangle(t,e,i,s,r){Re.subVectors(e,t),ae.subVectors(i,t),De.crossVectors(Re,ae);let n=this.direction.dot(De),h;if(n>0){if(s)return null;h=1}else if(n<0)h=-1,n=-n;else return null;nt.subVectors(this.origin,t);const a=h*this.direction.dot(ae.crossVectors(nt,ae));if(a<0)return null;const o=h*this.direction.dot(Re.cross(nt));if(o<0||a+o>n)return null;const l=-h*nt.dot(De);return l<0?null:this.at(l/n,r)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class L{constructor(t,e,i,s,r,n,h,a,o,l,u,c,d,f,p,y){L.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,i,s,r,n,h,a,o,l,u,c,d,f,p,y)}set(t,e,i,s,r,n,h,a,o,l,u,c,d,f,p,y){const g=this.elements;return g[0]=t,g[4]=e,g[8]=i,g[12]=s,g[1]=r,g[5]=n,g[9]=h,g[13]=a,g[2]=o,g[6]=l,g[10]=u,g[14]=c,g[3]=d,g[7]=f,g[11]=p,g[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new L().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,s=1/wt.setFromMatrixColumn(t,0).length(),r=1/wt.setFromMatrixColumn(t,1).length(),n=1/wt.setFromMatrixColumn(t,2).length();return e[0]=i[0]*s,e[1]=i[1]*s,e[2]=i[2]*s,e[3]=0,e[4]=i[4]*r,e[5]=i[5]*r,e[6]=i[6]*r,e[7]=0,e[8]=i[8]*n,e[9]=i[9]*n,e[10]=i[10]*n,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,s=t.y,r=t.z,n=Math.cos(i),h=Math.sin(i),a=Math.cos(s),o=Math.sin(s),l=Math.cos(r),u=Math.sin(r);if(t.order==="XYZ"){const c=n*l,d=n*u,f=h*l,p=h*u;e[0]=a*l,e[4]=-a*u,e[8]=o,e[1]=d+f*o,e[5]=c-p*o,e[9]=-h*a,e[2]=p-c*o,e[6]=f+d*o,e[10]=n*a}else if(t.order==="YXZ"){const c=a*l,d=a*u,f=o*l,p=o*u;e[0]=c+p*h,e[4]=f*h-d,e[8]=n*o,e[1]=n*u,e[5]=n*l,e[9]=-h,e[2]=d*h-f,e[6]=p+c*h,e[10]=n*a}else if(t.order==="ZXY"){const c=a*l,d=a*u,f=o*l,p=o*u;e[0]=c-p*h,e[4]=-n*u,e[8]=f+d*h,e[1]=d+f*h,e[5]=n*l,e[9]=p-c*h,e[2]=-n*o,e[6]=h,e[10]=n*a}else if(t.order==="ZYX"){const c=n*l,d=n*u,f=h*l,p=h*u;e[0]=a*l,e[4]=f*o-d,e[8]=c*o+p,e[1]=a*u,e[5]=p*o+c,e[9]=d*o-f,e[2]=-o,e[6]=h*a,e[10]=n*a}else if(t.order==="YZX"){const c=n*a,d=n*o,f=h*a,p=h*o;e[0]=a*l,e[4]=p-c*u,e[8]=f*u+d,e[1]=u,e[5]=n*l,e[9]=-h*l,e[2]=-o*l,e[6]=d*u+f,e[10]=c-p*u}else if(t.order==="XZY"){const c=n*a,d=n*o,f=h*a,p=h*o;e[0]=a*l,e[4]=-u,e[8]=o*l,e[1]=c*u+p,e[5]=n*l,e[9]=d*u-f,e[2]=f*u-d,e[6]=h*l,e[10]=p*u+c}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(ls,t,us)}lookAt(t,e,i){const s=this.elements;return N.subVectors(t,e),N.lengthSq()===0&&(N.z=1),N.normalize(),at.crossVectors(i,N),at.lengthSq()===0&&(Math.abs(i.z)===1?N.x+=1e-4:N.z+=1e-4,N.normalize(),at.crossVectors(i,N)),at.normalize(),he.crossVectors(N,at),s[0]=at.x,s[4]=he.x,s[8]=N.x,s[1]=at.y,s[5]=he.y,s[9]=N.y,s[2]=at.z,s[6]=he.z,s[10]=N.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,s=e.elements,r=this.elements,n=i[0],h=i[4],a=i[8],o=i[12],l=i[1],u=i[5],c=i[9],d=i[13],f=i[2],p=i[6],y=i[10],g=i[14],w=i[3],S=i[7],M=i[11],_=i[15],A=s[0],b=s[4],z=s[8],B=s[12],E=s[1],R=s[5],et=s[9],D=s[13],it=s[2],Yt=s[6],Gt=s[10],Zt=s[14],Jt=s[3],Qt=s[7],Kt=s[11],te=s[15];return r[0]=n*A+h*E+a*it+o*Jt,r[4]=n*b+h*R+a*Yt+o*Qt,r[8]=n*z+h*et+a*Gt+o*Kt,r[12]=n*B+h*D+a*Zt+o*te,r[1]=l*A+u*E+c*it+d*Jt,r[5]=l*b+u*R+c*Yt+d*Qt,r[9]=l*z+u*et+c*Gt+d*Kt,r[13]=l*B+u*D+c*Zt+d*te,r[2]=f*A+p*E+y*it+g*Jt,r[6]=f*b+p*R+y*Yt+g*Qt,r[10]=f*z+p*et+y*Gt+g*Kt,r[14]=f*B+p*D+y*Zt+g*te,r[3]=w*A+S*E+M*it+_*Jt,r[7]=w*b+S*R+M*Yt+_*Qt,r[11]=w*z+S*et+M*Gt+_*Kt,r[15]=w*B+S*D+M*Zt+_*te,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],s=t[8],r=t[12],n=t[1],h=t[5],a=t[9],o=t[13],l=t[2],u=t[6],c=t[10],d=t[14],f=t[3],p=t[7],y=t[11],g=t[15];return f*(+r*a*u-s*o*u-r*h*c+i*o*c+s*h*d-i*a*d)+p*(+e*a*d-e*o*c+r*n*c-s*n*d+s*o*l-r*a*l)+y*(+e*o*u-e*h*d-r*n*u+i*n*d+r*h*l-i*o*l)+g*(-s*h*l-e*a*u+e*h*c+s*n*u-i*n*c+i*a*l)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const s=this.elements;return t.isVector3?(s[12]=t.x,s[13]=t.y,s[14]=t.z):(s[12]=t,s[13]=e,s[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],s=t[2],r=t[3],n=t[4],h=t[5],a=t[6],o=t[7],l=t[8],u=t[9],c=t[10],d=t[11],f=t[12],p=t[13],y=t[14],g=t[15],w=u*y*o-p*c*o+p*a*d-h*y*d-u*a*g+h*c*g,S=f*c*o-l*y*o-f*a*d+n*y*d+l*a*g-n*c*g,M=l*p*o-f*u*o+f*h*d-n*p*d-l*h*g+n*u*g,_=f*u*a-l*p*a-f*h*c+n*p*c+l*h*y-n*u*y,A=e*w+i*S+s*M+r*_;if(A===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/A;return t[0]=w*b,t[1]=(p*c*r-u*y*r-p*s*d+i*y*d+u*s*g-i*c*g)*b,t[2]=(h*y*r-p*a*r+p*s*o-i*y*o-h*s*g+i*a*g)*b,t[3]=(u*a*r-h*c*r-u*s*o+i*c*o+h*s*d-i*a*d)*b,t[4]=S*b,t[5]=(l*y*r-f*c*r+f*s*d-e*y*d-l*s*g+e*c*g)*b,t[6]=(f*a*r-n*y*r-f*s*o+e*y*o+n*s*g-e*a*g)*b,t[7]=(n*c*r-l*a*r+l*s*o-e*c*o-n*s*d+e*a*d)*b,t[8]=M*b,t[9]=(f*u*r-l*p*r-f*i*d+e*p*d+l*i*g-e*u*g)*b,t[10]=(n*p*r-f*h*r+f*i*o-e*p*o-n*i*g+e*h*g)*b,t[11]=(l*h*r-n*u*r-l*i*o+e*u*o+n*i*d-e*h*d)*b,t[12]=_*b,t[13]=(l*p*s-f*u*s+f*i*c-e*p*c-l*i*y+e*u*y)*b,t[14]=(f*h*s-n*p*s-f*i*a+e*p*a+n*i*y-e*h*y)*b,t[15]=(n*u*s-l*h*s+l*i*a-e*u*a-n*i*c+e*h*c)*b,this}scale(t){const e=this.elements,i=t.x,s=t.y,r=t.z;return e[0]*=i,e[4]*=s,e[8]*=r,e[1]*=i,e[5]*=s,e[9]*=r,e[2]*=i,e[6]*=s,e[10]*=r,e[3]*=i,e[7]*=s,e[11]*=r,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],s=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,s))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),s=Math.sin(e),r=1-i,n=t.x,h=t.y,a=t.z,o=r*n,l=r*h;return this.set(o*n+i,o*h-s*a,o*a+s*h,0,o*h+s*a,l*h+i,l*a-s*n,0,o*a-s*h,l*a+s*n,r*a*a+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,s,r,n){return this.set(1,i,r,0,t,1,n,0,e,s,1,0,0,0,0,1),this}compose(t,e,i){const s=this.elements,r=e._x,n=e._y,h=e._z,a=e._w,o=r+r,l=n+n,u=h+h,c=r*o,d=r*l,f=r*u,p=n*l,y=n*u,g=h*u,w=a*o,S=a*l,M=a*u,_=i.x,A=i.y,b=i.z;return s[0]=(1-(p+g))*_,s[1]=(d+M)*_,s[2]=(f-S)*_,s[3]=0,s[4]=(d-M)*A,s[5]=(1-(c+g))*A,s[6]=(y+w)*A,s[7]=0,s[8]=(f+S)*b,s[9]=(y-w)*b,s[10]=(1-(c+p))*b,s[11]=0,s[12]=t.x,s[13]=t.y,s[14]=t.z,s[15]=1,this}decompose(t,e,i){const s=this.elements;let r=wt.set(s[0],s[1],s[2]).length();const n=wt.set(s[4],s[5],s[6]).length(),h=wt.set(s[8],s[9],s[10]).length();this.determinant()<0&&(r=-r),t.x=s[12],t.y=s[13],t.z=s[14],H.copy(this);const o=1/r,l=1/n,u=1/h;return H.elements[0]*=o,H.elements[1]*=o,H.elements[2]*=o,H.elements[4]*=l,H.elements[5]*=l,H.elements[6]*=l,H.elements[8]*=u,H.elements[9]*=u,H.elements[10]*=u,e.setFromRotationMatrix(H),i.x=r,i.y=n,i.z=h,this}makePerspective(t,e,i,s,r,n,h=Nt){const a=this.elements,o=2*r/(e-t),l=2*r/(i-s),u=(e+t)/(e-t),c=(i+s)/(i-s);let d,f;if(h===Nt)d=-(n+r)/(n-r),f=-2*n*r/(n-r);else if(h===ci)d=-n/(n-r),f=-n*r/(n-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+h);return a[0]=o,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=l,a[9]=c,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=f,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(t,e,i,s,r,n,h=Nt){const a=this.elements,o=1/(e-t),l=1/(i-s),u=1/(n-r),c=(e+t)*o,d=(i+s)*l;let f,p;if(h===Nt)f=(n+r)*u,p=-2*u;else if(h===ci)f=r*u,p=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+h);return a[0]=2*o,a[4]=0,a[8]=0,a[12]=-c,a[1]=0,a[5]=2*l,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=p,a[14]=-f,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let s=0;s<16;s++)if(e[s]!==i[s])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const wt=new x,H=new L,ls=new x(0,0,0),us=new x(1,1,1),at=new x,he=new x,N=new x,xi=new L,yi=new Ht;class Xt{constructor(t=0,e=0,i=0,s=Xt.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=s}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,s=this._order){return this._x=t,this._y=e,this._z=i,this._order=s,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const s=t.elements,r=s[0],n=s[4],h=s[8],a=s[1],o=s[5],l=s[9],u=s[2],c=s[6],d=s[10];switch(e){case"XYZ":this._y=Math.asin(O(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-n,r)):(this._x=Math.atan2(c,o),this._z=0);break;case"YXZ":this._x=Math.asin(-O(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(h,d),this._z=Math.atan2(a,o)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(O(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-n,o)):(this._y=0,this._z=Math.atan2(a,r));break;case"ZYX":this._y=Math.asin(-O(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(c,d),this._z=Math.atan2(a,r)):(this._x=0,this._z=Math.atan2(-n,o));break;case"YZX":this._z=Math.asin(O(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(h,d));break;case"XZY":this._z=Math.asin(-O(n,-1,1)),Math.abs(n)<.9999999?(this._x=Math.atan2(c,o),this._y=Math.atan2(h,r)):(this._x=Math.atan2(-l,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return xi.makeRotationFromQuaternion(t),this.setFromRotationMatrix(xi,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return yi.setFromEuler(this),this.setFromQuaternion(yi,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Xt.DEFAULT_ORDER="XYZ";class cs{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let ds=0;const gi=new x,_t=new Ht,Q=new L,oe=new x,Ot=new x,ms=new x,fs=new Ht,Mi=new x(1,0,0),bi=new x(0,1,0),wi=new x(0,0,1),_i={type:"added"},ps={type:"removed"},St={type:"childadded",child:null},ke={type:"childremoved",child:null};class G extends Wt{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:ds++}),this.uuid=qt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=G.DEFAULT_UP.clone();const t=new x,e=new Xt,i=new Ht,s=new x(1,1,1);function r(){i.setFromEuler(e,!1)}function n(){e.setFromQuaternion(i,void 0,!1)}e._onChange(r),i._onChange(n),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:s},modelViewMatrix:{value:new L},normalMatrix:{value:new ct}}),this.matrix=new L,this.matrixWorld=new L,this.matrixAutoUpdate=G.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=G.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new cs,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return _t.setFromAxisAngle(t,e),this.quaternion.multiply(_t),this}rotateOnWorldAxis(t,e){return _t.setFromAxisAngle(t,e),this.quaternion.premultiply(_t),this}rotateX(t){return this.rotateOnAxis(Mi,t)}rotateY(t){return this.rotateOnAxis(bi,t)}rotateZ(t){return this.rotateOnAxis(wi,t)}translateOnAxis(t,e){return gi.copy(t).applyQuaternion(this.quaternion),this.position.add(gi.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Mi,t)}translateY(t){return this.translateOnAxis(bi,t)}translateZ(t){return this.translateOnAxis(wi,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Q.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?oe.copy(t):oe.set(t,e,i);const s=this.parent;this.updateWorldMatrix(!0,!1),Ot.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Q.lookAt(Ot,oe,this.up):Q.lookAt(oe,Ot,this.up),this.quaternion.setFromRotationMatrix(Q),s&&(Q.extractRotation(s.matrixWorld),_t.setFromRotationMatrix(Q),this.quaternion.premultiply(_t.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(_i),St.child=t,this.dispatchEvent(St),St.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(ps),ke.child=t,this.dispatchEvent(ke),ke.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Q.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Q.multiply(t.parent.matrixWorld)),t.applyMatrix4(Q),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(_i),St.child=t,this.dispatchEvent(St),St.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,s=this.children.length;i<s;i++){const n=this.children[i].getObjectByProperty(t,e);if(n!==void 0)return n}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const s=this.children;for(let r=0,n=s.length;r<n;r++)s[r].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ot,t,ms),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ot,fs,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,s=e.length;i<s;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const s=this.children;for(let r=0,n=s.length;r<n;r++)s[r].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const s={};s.uuid=this.uuid,s.type=this.type,this.name!==""&&(s.name=this.name),this.castShadow===!0&&(s.castShadow=!0),this.receiveShadow===!0&&(s.receiveShadow=!0),this.visible===!1&&(s.visible=!1),this.frustumCulled===!1&&(s.frustumCulled=!1),this.renderOrder!==0&&(s.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(s.userData=this.userData),s.layers=this.layers.mask,s.matrix=this.matrix.toArray(),s.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(s.matrixAutoUpdate=!1),this.isInstancedMesh&&(s.type="InstancedMesh",s.count=this.count,s.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(s.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(s.type="BatchedMesh",s.perObjectFrustumCulled=this.perObjectFrustumCulled,s.sortObjects=this.sortObjects,s.drawRanges=this._drawRanges,s.reservedRanges=this._reservedRanges,s.visibility=this._visibility,s.active=this._active,s.bounds=this._bounds.map(h=>({boxInitialized:h.boxInitialized,boxMin:h.box.min.toArray(),boxMax:h.box.max.toArray(),sphereInitialized:h.sphereInitialized,sphereRadius:h.sphere.radius,sphereCenter:h.sphere.center.toArray()})),s.maxInstanceCount=this._maxInstanceCount,s.maxVertexCount=this._maxVertexCount,s.maxIndexCount=this._maxIndexCount,s.geometryInitialized=this._geometryInitialized,s.geometryCount=this._geometryCount,s.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(s.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(s.boundingSphere={center:s.boundingSphere.center.toArray(),radius:s.boundingSphere.radius}),this.boundingBox!==null&&(s.boundingBox={min:s.boundingBox.min.toArray(),max:s.boundingBox.max.toArray()}));function r(h,a){return h[a.uuid]===void 0&&(h[a.uuid]=a.toJSON(t)),a.uuid}if(this.isScene)this.background&&(this.background.isColor?s.background=this.background.toJSON():this.background.isTexture&&(s.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(s.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){s.geometry=r(t.geometries,this.geometry);const h=this.geometry.parameters;if(h!==void 0&&h.shapes!==void 0){const a=h.shapes;if(Array.isArray(a))for(let o=0,l=a.length;o<l;o++){const u=a[o];r(t.shapes,u)}else r(t.shapes,a)}}if(this.isSkinnedMesh&&(s.bindMode=this.bindMode,s.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(t.skeletons,this.skeleton),s.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const h=[];for(let a=0,o=this.material.length;a<o;a++)h.push(r(t.materials,this.material[a]));s.material=h}else s.material=r(t.materials,this.material);if(this.children.length>0){s.children=[];for(let h=0;h<this.children.length;h++)s.children.push(this.children[h].toJSON(t).object)}if(this.animations.length>0){s.animations=[];for(let h=0;h<this.animations.length;h++){const a=this.animations[h];s.animations.push(r(t.animations,a))}}if(e){const h=n(t.geometries),a=n(t.materials),o=n(t.textures),l=n(t.images),u=n(t.shapes),c=n(t.skeletons),d=n(t.animations),f=n(t.nodes);h.length>0&&(i.geometries=h),a.length>0&&(i.materials=a),o.length>0&&(i.textures=o),l.length>0&&(i.images=l),u.length>0&&(i.shapes=u),c.length>0&&(i.skeletons=c),d.length>0&&(i.animations=d),f.length>0&&(i.nodes=f)}return i.object=s,i;function n(h){const a=[];for(const o in h){const l=h[o];delete l.metadata,a.push(l)}return a}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const s=t.children[i];this.add(s.clone())}return this}}G.DEFAULT_UP=new x(0,1,0);G.DEFAULT_MATRIX_AUTO_UPDATE=!0;G.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const j=new x,K=new x,Pe=new x,tt=new x,zt=new x,At=new x,Si=new x,Ie=new x,Oe=new x,Le=new x,Ne=new pt,Ue=new pt,Ve=new pt;class X{constructor(t=new x,e=new x,i=new x){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,s){s.subVectors(i,e),j.subVectors(t,e),s.cross(j);const r=s.lengthSq();return r>0?s.multiplyScalar(1/Math.sqrt(r)):s.set(0,0,0)}static getBarycoord(t,e,i,s,r){j.subVectors(s,e),K.subVectors(i,e),Pe.subVectors(t,e);const n=j.dot(j),h=j.dot(K),a=j.dot(Pe),o=K.dot(K),l=K.dot(Pe),u=n*o-h*h;if(u===0)return r.set(0,0,0),null;const c=1/u,d=(o*a-h*l)*c,f=(n*l-h*a)*c;return r.set(1-d-f,f,d)}static containsPoint(t,e,i,s){return this.getBarycoord(t,e,i,s,tt)===null?!1:tt.x>=0&&tt.y>=0&&tt.x+tt.y<=1}static getInterpolation(t,e,i,s,r,n,h,a){return this.getBarycoord(t,e,i,s,tt)===null?(a.x=0,a.y=0,"z"in a&&(a.z=0),"w"in a&&(a.w=0),null):(a.setScalar(0),a.addScaledVector(r,tt.x),a.addScaledVector(n,tt.y),a.addScaledVector(h,tt.z),a)}static getInterpolatedAttribute(t,e,i,s,r,n){return Ne.setScalar(0),Ue.setScalar(0),Ve.setScalar(0),Ne.fromBufferAttribute(t,e),Ue.fromBufferAttribute(t,i),Ve.fromBufferAttribute(t,s),n.setScalar(0),n.addScaledVector(Ne,r.x),n.addScaledVector(Ue,r.y),n.addScaledVector(Ve,r.z),n}static isFrontFacing(t,e,i,s){return j.subVectors(i,e),K.subVectors(t,e),j.cross(K).dot(s)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,s){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[s]),this}setFromAttributeAndIndices(t,e,i,s){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,s),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return j.subVectors(this.c,this.b),K.subVectors(this.a,this.b),j.cross(K).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return X.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return X.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,s,r){return X.getInterpolation(t,this.a,this.b,this.c,e,i,s,r)}containsPoint(t){return X.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return X.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,s=this.b,r=this.c;let n,h;zt.subVectors(s,i),At.subVectors(r,i),Ie.subVectors(t,i);const a=zt.dot(Ie),o=At.dot(Ie);if(a<=0&&o<=0)return e.copy(i);Oe.subVectors(t,s);const l=zt.dot(Oe),u=At.dot(Oe);if(l>=0&&u<=l)return e.copy(s);const c=a*u-l*o;if(c<=0&&a>=0&&l<=0)return n=a/(a-l),e.copy(i).addScaledVector(zt,n);Le.subVectors(t,r);const d=zt.dot(Le),f=At.dot(Le);if(f>=0&&d<=f)return e.copy(r);const p=d*o-a*f;if(p<=0&&o>=0&&f<=0)return h=o/(o-f),e.copy(i).addScaledVector(At,h);const y=l*f-d*u;if(y<=0&&u-l>=0&&d-f>=0)return Si.subVectors(r,s),h=(u-l)/(u-l+(d-f)),e.copy(s).addScaledVector(Si,h);const g=1/(y+p+c);return n=p*g,h=c*g,e.copy(i).addScaledVector(zt,n).addScaledVector(At,h)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const Ii={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ht={h:0,s:0,l:0},le={h:0,s:0,l:0};function We(m,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?m+(t-m)*6*e:e<1/2?t:e<2/3?m+(t-m)*6*(2/3-e):m}class ut{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(e===void 0&&i===void 0){const s=t;s&&s.isColor?this.copy(s):typeof s=="number"?this.setHex(s):typeof s=="string"&&this.setStyle(s)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=ot){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,W.toWorkingColorSpace(this,e),this}setRGB(t,e,i,s=W.workingColorSpace){return this.r=t,this.g=e,this.b=i,W.toWorkingColorSpace(this,s),this}setHSL(t,e,i,s=W.workingColorSpace){if(t=ts(t,1),e=O(e,0,1),i=O(i,0,1),e===0)this.r=this.g=this.b=i;else{const r=i<=.5?i*(1+e):i+e-i*e,n=2*i-r;this.r=We(n,r,t+1/3),this.g=We(n,r,t),this.b=We(n,r,t-1/3)}return W.toWorkingColorSpace(this,s),this}setStyle(t,e=ot){function i(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let s;if(s=/^(\w+)\(([^\)]*)\)/.exec(t)){let r;const n=s[1],h=s[2];switch(n){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h))return i(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,e);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h))return i(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,e);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(h))return i(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(s=/^\#([A-Fa-f\d]+)$/.exec(t)){const r=s[1],n=r.length;if(n===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,e);if(n===6)return this.setHex(parseInt(r,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=ot){const i=Ii[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=vt(t.r),this.g=vt(t.g),this.b=vt(t.b),this}copyLinearToSRGB(t){return this.r=Te(t.r),this.g=Te(t.g),this.b=Te(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=ot){return W.fromWorkingColorSpace(P.copy(this),t),Math.round(O(P.r*255,0,255))*65536+Math.round(O(P.g*255,0,255))*256+Math.round(O(P.b*255,0,255))}getHexString(t=ot){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=W.workingColorSpace){W.fromWorkingColorSpace(P.copy(this),e);const i=P.r,s=P.g,r=P.b,n=Math.max(i,s,r),h=Math.min(i,s,r);let a,o;const l=(h+n)/2;if(h===n)a=0,o=0;else{const u=n-h;switch(o=l<=.5?u/(n+h):u/(2-n-h),n){case i:a=(s-r)/u+(s<r?6:0);break;case s:a=(r-i)/u+2;break;case r:a=(i-s)/u+4;break}a/=6}return t.h=a,t.s=o,t.l=l,t}getRGB(t,e=W.workingColorSpace){return W.fromWorkingColorSpace(P.copy(this),e),t.r=P.r,t.g=P.g,t.b=P.b,t}getStyle(t=ot){W.fromWorkingColorSpace(P.copy(this),t);const e=P.r,i=P.g,s=P.b;return t!==ot?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${s.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(i*255)},${Math.round(s*255)})`}offsetHSL(t,e,i){return this.getHSL(ht),this.setHSL(ht.h+t,ht.s+e,ht.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(ht),t.getHSL(le);const i=ze(ht.h,le.h,e),s=ze(ht.s,le.s,e),r=ze(ht.l,le.l,e);return this.setHSL(i,s,r),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,s=this.b,r=t.elements;return this.r=r[0]*e+r[3]*i+r[6]*s,this.g=r[1]*e+r[4]*i+r[7]*s,this.b=r[2]*e+r[5]*i+r[8]*s,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const P=new ut;ut.NAMES=Ii;let xs=0;class Oi extends Wt{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:xs++}),this.uuid=qt(),this.name="",this.type="Material",this.blending=Ke,this.side=je,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=ei,this.blendDst=ii,this.blendEquation=ti,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new ut(0,0,0),this.blendAlpha=0,this.depthFunc=si,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=li,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=xt,this.stencilZFail=xt,this.stencilZPass=xt,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const i=t[e];if(i===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const s=this[e];if(s===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}s&&s.isColor?s.set(i):s&&s.isVector3&&i&&i.isVector3?s.copy(i):this[e]=i}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Ke&&(i.blending=this.blending),this.side!==je&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==ei&&(i.blendSrc=this.blendSrc),this.blendDst!==ii&&(i.blendDst=this.blendDst),this.blendEquation!==ti&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==si&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==li&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==xt&&(i.stencilFail=this.stencilFail),this.stencilZFail!==xt&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==xt&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function s(r){const n=[];for(const h in r){const a=r[h];delete a.metadata,n.push(a)}return n}if(e){const r=s(t.textures),n=s(t.images);r.length>0&&(i.textures=r),n.length>0&&(i.images=n)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(e!==null){const s=e.length;i=new Array(s);for(let r=0;r!==s;++r)i[r]=e[r].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class Li extends Oi{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ut(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Xt,this.combine=Yi,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const C=new x,ue=new F;class Bt{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i,this.usage=ui,this.updateRanges=[],this.gpuType=Ji,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let s=0,r=this.itemSize;s<r;s++)this.array[t+s]=e.array[i+s];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)ue.fromBufferAttribute(this,e),ue.applyMatrix3(t),this.setXY(e,ue.x,ue.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)C.fromBufferAttribute(this,e),C.applyMatrix3(t),this.setXYZ(e,C.x,C.y,C.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)C.fromBufferAttribute(this,e),C.applyMatrix4(t),this.setXYZ(e,C.x,C.y,C.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)C.fromBufferAttribute(this,e),C.applyNormalMatrix(t),this.setXYZ(e,C.x,C.y,C.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)C.fromBufferAttribute(this,e),C.transformDirection(t),this.setXYZ(e,C.x,C.y,C.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=Dt(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=I(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Dt(e,this.array)),e}setX(t,e){return this.normalized&&(e=I(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Dt(e,this.array)),e}setY(t,e){return this.normalized&&(e=I(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Dt(e,this.array)),e}setZ(t,e){return this.normalized&&(e=I(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Dt(e,this.array)),e}setW(t,e){return this.normalized&&(e=I(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=I(e,this.array),i=I(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,s){return t*=this.itemSize,this.normalized&&(e=I(e,this.array),i=I(i,this.array),s=I(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this}setXYZW(t,e,i,s,r){return t*=this.itemSize,this.normalized&&(e=I(e,this.array),i=I(i,this.array),s=I(s,this.array),r=I(r,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=s,this.array[t+3]=r,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==ui&&(t.usage=this.usage),t}}class ys extends Bt{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class gs extends Bt{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class $e extends Bt{constructor(t,e,i){super(new Float32Array(t),e,i)}}let Ms=0;const V=new L,qe=new G,Tt=new x,U=new jt,Lt=new jt,v=new x;class _e extends Wt{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:Ms++}),this.uuid=qt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(es(t)?gs:ys)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const r=new ct().getNormalMatrix(t);i.applyNormalMatrix(r),i.needsUpdate=!0}const s=this.attributes.tangent;return s!==void 0&&(s.transformDirection(t),s.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return V.makeRotationFromQuaternion(t),this.applyMatrix4(V),this}rotateX(t){return V.makeRotationX(t),this.applyMatrix4(V),this}rotateY(t){return V.makeRotationY(t),this.applyMatrix4(V),this}rotateZ(t){return V.makeRotationZ(t),this.applyMatrix4(V),this}translate(t,e,i){return V.makeTranslation(t,e,i),this.applyMatrix4(V),this}scale(t,e,i){return V.makeScale(t,e,i),this.applyMatrix4(V),this}lookAt(t){return qe.lookAt(t),qe.updateMatrix(),this.applyMatrix4(qe.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Tt).negate(),this.translate(Tt.x,Tt.y,Tt.z),this}setFromPoints(t){const e=[];for(let i=0,s=t.length;i<s;i++){const r=t[i];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new $e(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new jt);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new x(-1/0,-1/0,-1/0),new x(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,s=e.length;i<s;i++){const r=e[i];U.setFromBufferAttribute(r),this.morphTargetsRelative?(v.addVectors(this.boundingBox.min,U.min),this.boundingBox.expandByPoint(v),v.addVectors(this.boundingBox.max,U.max),this.boundingBox.expandByPoint(v)):(this.boundingBox.expandByPoint(U.min),this.boundingBox.expandByPoint(U.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Pi);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new x,1/0);return}if(t){const i=this.boundingSphere.center;if(U.setFromBufferAttribute(t),e)for(let r=0,n=e.length;r<n;r++){const h=e[r];Lt.setFromBufferAttribute(h),this.morphTargetsRelative?(v.addVectors(U.min,Lt.min),U.expandByPoint(v),v.addVectors(U.max,Lt.max),U.expandByPoint(v)):(U.expandByPoint(Lt.min),U.expandByPoint(Lt.max))}U.getCenter(i);let s=0;for(let r=0,n=t.count;r<n;r++)v.fromBufferAttribute(t,r),s=Math.max(s,i.distanceToSquared(v));if(e)for(let r=0,n=e.length;r<n;r++){const h=e[r],a=this.morphTargetsRelative;for(let o=0,l=h.count;o<l;o++)v.fromBufferAttribute(h,o),a&&(Tt.fromBufferAttribute(t,o),v.add(Tt)),s=Math.max(s,i.distanceToSquared(v))}this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.position,s=e.normal,r=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Bt(new Float32Array(4*i.count),4));const n=this.getAttribute("tangent"),h=[],a=[];for(let z=0;z<i.count;z++)h[z]=new x,a[z]=new x;const o=new x,l=new x,u=new x,c=new F,d=new F,f=new F,p=new x,y=new x;function g(z,B,E){o.fromBufferAttribute(i,z),l.fromBufferAttribute(i,B),u.fromBufferAttribute(i,E),c.fromBufferAttribute(r,z),d.fromBufferAttribute(r,B),f.fromBufferAttribute(r,E),l.sub(o),u.sub(o),d.sub(c),f.sub(c);const R=1/(d.x*f.y-f.x*d.y);isFinite(R)&&(p.copy(l).multiplyScalar(f.y).addScaledVector(u,-d.y).multiplyScalar(R),y.copy(u).multiplyScalar(d.x).addScaledVector(l,-f.x).multiplyScalar(R),h[z].add(p),h[B].add(p),h[E].add(p),a[z].add(y),a[B].add(y),a[E].add(y))}let w=this.groups;w.length===0&&(w=[{start:0,count:t.count}]);for(let z=0,B=w.length;z<B;++z){const E=w[z],R=E.start,et=E.count;for(let D=R,it=R+et;D<it;D+=3)g(t.getX(D+0),t.getX(D+1),t.getX(D+2))}const S=new x,M=new x,_=new x,A=new x;function b(z){_.fromBufferAttribute(s,z),A.copy(_);const B=h[z];S.copy(B),S.sub(_.multiplyScalar(_.dot(B))).normalize(),M.crossVectors(A,B);const R=M.dot(a[z])<0?-1:1;n.setXYZW(z,S.x,S.y,S.z,R)}for(let z=0,B=w.length;z<B;++z){const E=w[z],R=E.start,et=E.count;for(let D=R,it=R+et;D<it;D+=3)b(t.getX(D+0)),b(t.getX(D+1)),b(t.getX(D+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Bt(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let c=0,d=i.count;c<d;c++)i.setXYZ(c,0,0,0);const s=new x,r=new x,n=new x,h=new x,a=new x,o=new x,l=new x,u=new x;if(t)for(let c=0,d=t.count;c<d;c+=3){const f=t.getX(c+0),p=t.getX(c+1),y=t.getX(c+2);s.fromBufferAttribute(e,f),r.fromBufferAttribute(e,p),n.fromBufferAttribute(e,y),l.subVectors(n,r),u.subVectors(s,r),l.cross(u),h.fromBufferAttribute(i,f),a.fromBufferAttribute(i,p),o.fromBufferAttribute(i,y),h.add(l),a.add(l),o.add(l),i.setXYZ(f,h.x,h.y,h.z),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(y,o.x,o.y,o.z)}else for(let c=0,d=e.count;c<d;c+=3)s.fromBufferAttribute(e,c+0),r.fromBufferAttribute(e,c+1),n.fromBufferAttribute(e,c+2),l.subVectors(n,r),u.subVectors(s,r),l.cross(u),i.setXYZ(c+0,l.x,l.y,l.z),i.setXYZ(c+1,l.x,l.y,l.z),i.setXYZ(c+2,l.x,l.y,l.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)v.fromBufferAttribute(t,e),v.normalize(),t.setXYZ(e,v.x,v.y,v.z)}toNonIndexed(){function t(h,a){const o=h.array,l=h.itemSize,u=h.normalized,c=new o.constructor(a.length*l);let d=0,f=0;for(let p=0,y=a.length;p<y;p++){h.isInterleavedBufferAttribute?d=a[p]*h.data.stride+h.offset:d=a[p]*l;for(let g=0;g<l;g++)c[f++]=o[d++]}return new Bt(c,l,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new _e,i=this.index.array,s=this.attributes;for(const h in s){const a=s[h],o=t(a,i);e.setAttribute(h,o)}const r=this.morphAttributes;for(const h in r){const a=[],o=r[h];for(let l=0,u=o.length;l<u;l++){const c=o[l],d=t(c,i);a.push(d)}e.morphAttributes[h]=a}e.morphTargetsRelative=this.morphTargetsRelative;const n=this.groups;for(let h=0,a=n.length;h<a;h++){const o=n[h];e.addGroup(o.start,o.count,o.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const a=this.parameters;for(const o in a)a[o]!==void 0&&(t[o]=a[o]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const a in i){const o=i[a];t.data.attributes[a]=o.toJSON(t.data)}const s={};let r=!1;for(const a in this.morphAttributes){const o=this.morphAttributes[a],l=[];for(let u=0,c=o.length;u<c;u++){const d=o[u];l.push(d.toJSON(t.data))}l.length>0&&(s[a]=l,r=!0)}r&&(t.data.morphAttributes=s,t.data.morphTargetsRelative=this.morphTargetsRelative);const n=this.groups;n.length>0&&(t.data.groups=JSON.parse(JSON.stringify(n)));const h=this.boundingSphere;return h!==null&&(t.data.boundingSphere={center:h.center.toArray(),radius:h.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const s=t.attributes;for(const o in s){const l=s[o];this.setAttribute(o,l.clone(e))}const r=t.morphAttributes;for(const o in r){const l=[],u=r[o];for(let c=0,d=u.length;c<d;c++)l.push(u[c].clone(e));this.morphAttributes[o]=l}this.morphTargetsRelative=t.morphTargetsRelative;const n=t.groups;for(let o=0,l=n.length;o<l;o++){const u=n[o];this.addGroup(u.start,u.count,u.materialIndex)}const h=t.boundingBox;h!==null&&(this.boundingBox=h.clone());const a=t.boundingSphere;return a!==null&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const zi=new L,ft=new os,ce=new Pi,Ai=new x,de=new x,me=new x,fe=new x,He=new x,pe=new x,Ti=new x,xe=new x;class bs extends G{constructor(t=new _e,e=new Li){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const s=e[i[0]];if(s!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,n=s.length;r<n;r++){const h=s[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[h]=r}}}}getVertexPosition(t,e){const i=this.geometry,s=i.attributes.position,r=i.morphAttributes.position,n=i.morphTargetsRelative;e.fromBufferAttribute(s,t);const h=this.morphTargetInfluences;if(r&&h){pe.set(0,0,0);for(let a=0,o=r.length;a<o;a++){const l=h[a],u=r[a];l!==0&&(He.fromBufferAttribute(u,t),n?pe.addScaledVector(He,l):pe.addScaledVector(He.sub(e),l))}e.add(pe)}return e}raycast(t,e){const i=this.geometry,s=this.material,r=this.matrixWorld;s!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),ce.copy(i.boundingSphere),ce.applyMatrix4(r),ft.copy(t.ray).recast(t.near),!(ce.containsPoint(ft.origin)===!1&&(ft.intersectSphere(ce,Ai)===null||ft.origin.distanceToSquared(Ai)>(t.far-t.near)**2))&&(zi.copy(r).invert(),ft.copy(t.ray).applyMatrix4(zi),!(i.boundingBox!==null&&ft.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(t,e,ft)))}_computeIntersections(t,e,i){let s;const r=this.geometry,n=this.material,h=r.index,a=r.attributes.position,o=r.attributes.uv,l=r.attributes.uv1,u=r.attributes.normal,c=r.groups,d=r.drawRange;if(h!==null)if(Array.isArray(n))for(let f=0,p=c.length;f<p;f++){const y=c[f],g=n[y.materialIndex],w=Math.max(y.start,d.start),S=Math.min(h.count,Math.min(y.start+y.count,d.start+d.count));for(let M=w,_=S;M<_;M+=3){const A=h.getX(M),b=h.getX(M+1),z=h.getX(M+2);s=ye(this,g,t,i,o,l,u,A,b,z),s&&(s.faceIndex=Math.floor(M/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const f=Math.max(0,d.start),p=Math.min(h.count,d.start+d.count);for(let y=f,g=p;y<g;y+=3){const w=h.getX(y),S=h.getX(y+1),M=h.getX(y+2);s=ye(this,n,t,i,o,l,u,w,S,M),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}else if(a!==void 0)if(Array.isArray(n))for(let f=0,p=c.length;f<p;f++){const y=c[f],g=n[y.materialIndex],w=Math.max(y.start,d.start),S=Math.min(a.count,Math.min(y.start+y.count,d.start+d.count));for(let M=w,_=S;M<_;M+=3){const A=M,b=M+1,z=M+2;s=ye(this,g,t,i,o,l,u,A,b,z),s&&(s.faceIndex=Math.floor(M/3),s.face.materialIndex=y.materialIndex,e.push(s))}}else{const f=Math.max(0,d.start),p=Math.min(a.count,d.start+d.count);for(let y=f,g=p;y<g;y+=3){const w=y,S=y+1,M=y+2;s=ye(this,n,t,i,o,l,u,w,S,M),s&&(s.faceIndex=Math.floor(y/3),e.push(s))}}}}function ws(m,t,e,i,s,r,n,h){let a;if(t.side===ji?a=i.intersectTriangle(n,r,s,!0,h):a=i.intersectTriangle(s,r,n,t.side===je,h),a===null)return null;xe.copy(h),xe.applyMatrix4(m.matrixWorld);const o=e.ray.origin.distanceTo(xe);return o<e.near||o>e.far?null:{distance:o,point:xe.clone(),object:m}}function ye(m,t,e,i,s,r,n,h,a,o){m.getVertexPosition(h,de),m.getVertexPosition(a,me),m.getVertexPosition(o,fe);const l=ws(m,t,e,i,de,me,fe,Ti);if(l){const u=new x;X.getBarycoord(Ti,de,me,fe,u),s&&(l.uv=X.getInterpolatedAttribute(s,h,a,o,u,new F)),r&&(l.uv1=X.getInterpolatedAttribute(r,h,a,o,u,new F)),n&&(l.normal=X.getInterpolatedAttribute(n,h,a,o,u,new x),l.normal.dot(i.direction)>0&&l.normal.multiplyScalar(-1));const c={a:h,b:a,c:o,normal:new x,materialIndex:0};X.getNormal(de,me,fe,c.normal),l.face=c,l.barycoord=u}return l}function Qe(m){const t={};for(const e in m){t[e]={};for(const i in m[e]){const s=m[e][i];s&&(s.isColor||s.isMatrix3||s.isMatrix4||s.isVector2||s.isVector3||s.isVector4||s.isTexture||s.isQuaternion)?s.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][i]=null):t[e][i]=s.clone():Array.isArray(s)?t[e][i]=s.slice():t[e][i]=s}}return t}function _s(m){const t={};for(let e=0;e<m.length;e++){const i=Qe(m[e]);for(const s in i)t[s]=i[s]}return t}function Ss(m){const t=[];for(let e=0;e<m.length;e++)t.push(m[e].clone());return t}const Ye={clone:Qe,merge:_s};var zs=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,As=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ft extends Oi{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=zs,this.fragmentShader=As,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Qe(t.uniforms),this.uniformsGroups=Ss(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const s in this.uniforms){const n=this.uniforms[s].value;n&&n.isTexture?e.uniforms[s]={type:"t",value:n.toJSON(t).uuid}:n&&n.isColor?e.uniforms[s]={type:"c",value:n.getHex()}:n&&n.isVector2?e.uniforms[s]={type:"v2",value:n.toArray()}:n&&n.isVector3?e.uniforms[s]={type:"v3",value:n.toArray()}:n&&n.isVector4?e.uniforms[s]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?e.uniforms[s]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?e.uniforms[s]={type:"m4",value:n.toArray()}:e.uniforms[s]={value:n}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const i={};for(const s in this.extensions)this.extensions[s]===!0&&(i[s]=!0);return Object.keys(i).length>0&&(e.extensions=i),e}}class Ts extends G{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new L,this.projectionMatrix=new L,this.projectionMatrixInverse=new L,this.coordinateSystem=Nt}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Fs extends Ts{constructor(t=-1,e=1,i=1,s=-1,r=.1,n=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=s,this.near=r,this.far=n,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,i,s,r,n){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=s,this.view.width=r,this.view.height=n,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,s=(this.top+this.bottom)/2;let r=i-t,n=i+t,h=s+e,a=s-e;if(this.view!==null&&this.view.enabled){const o=(this.right-this.left)/this.view.fullWidth/this.zoom,l=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=o*this.view.offsetX,n=r+o*this.view.width,h-=l*this.view.offsetY,a=h-l*this.view.height}this.projectionMatrix.makeOrthographic(r,n,h,a,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class Cs{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Fi(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=Fi();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function Fi(){return performance.now()}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:vi}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=vi);const Ni={name:"CopyShader",uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;
			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform float opacity;

		uniform sampler2D tDiffuse;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );
			gl_FragColor = opacity * texel;


		}`};class $t{constructor(){this.isPass=!0,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.renderToScreen=!1}setSize(){}render(){console.error("THREE.Pass: .render() must be implemented in derived pass.")}dispose(){}}const vs=new Fs(-1,1,1,-1,0,1);class Bs extends _e{constructor(){super(),this.setAttribute("position",new $e([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new $e([0,2,0,0,2,0],2))}}const Es=new Bs;class Ui{constructor(t){this._mesh=new bs(Es,t)}dispose(){this._mesh.geometry.dispose()}render(t){t.render(this._mesh,vs)}get material(){return this._mesh.material}set material(t){this._mesh.material=t}}class Rs extends $t{constructor(t,e){super(),this.textureID=e!==void 0?e:"tDiffuse",t instanceof Ft?(this.uniforms=t.uniforms,this.material=t):t&&(this.uniforms=Ye.clone(t.uniforms),this.material=new Ft({name:t.name!==void 0?t.name:"unspecified",defines:Object.assign({},t.defines),uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader})),this.fsQuad=new Ui(this.material)}render(t,e,i){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i.texture),this.fsQuad.material=this.material,this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(e),this.clear&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),this.fsQuad.render(t))}dispose(){this.material.dispose(),this.fsQuad.dispose()}}class Ci extends $t{constructor(t,e){super(),this.scene=t,this.camera=e,this.clear=!0,this.needsSwap=!1,this.inverse=!1}render(t,e,i){const s=t.getContext(),r=t.state;r.buffers.color.setMask(!1),r.buffers.depth.setMask(!1),r.buffers.color.setLocked(!0),r.buffers.depth.setLocked(!0);let n,h;this.inverse?(n=0,h=1):(n=1,h=0),r.buffers.stencil.setTest(!0),r.buffers.stencil.setOp(s.REPLACE,s.REPLACE,s.REPLACE),r.buffers.stencil.setFunc(s.ALWAYS,n,4294967295),r.buffers.stencil.setClear(h),r.buffers.stencil.setLocked(!0),t.setRenderTarget(i),this.clear&&t.clear(),t.render(this.scene,this.camera),t.setRenderTarget(e),this.clear&&t.clear(),t.render(this.scene,this.camera),r.buffers.color.setLocked(!1),r.buffers.depth.setLocked(!1),r.buffers.color.setMask(!0),r.buffers.depth.setMask(!0),r.buffers.stencil.setLocked(!1),r.buffers.stencil.setFunc(s.EQUAL,1,4294967295),r.buffers.stencil.setOp(s.KEEP,s.KEEP,s.KEEP),r.buffers.stencil.setLocked(!0)}}class Ds extends $t{constructor(){super(),this.needsSwap=!1}render(t){t.state.buffers.stencil.setLocked(!1),t.state.buffers.stencil.setTest(!1)}}class ks{constructor(t,e){if(this.renderer=t,this._pixelRatio=t.getPixelRatio(),e===void 0){const i=t.getSize(new F);this._width=i.width,this._height=i.height,e=new Me(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:ge}),e.texture.name="EffectComposer.rt1"}else this._width=e.width,this._height=e.height;this.renderTarget1=e,this.renderTarget2=e.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.passes=[],this.copyPass=new Rs(Ni),this.copyPass.material.blending=Xi,this.clock=new Cs}swapBuffers(){const t=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=t}addPass(t){this.passes.push(t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}insertPass(t,e){this.passes.splice(e,0,t),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}removePass(t){const e=this.passes.indexOf(t);e!==-1&&this.passes.splice(e,1)}isLastEnabledPass(t){for(let e=t+1;e<this.passes.length;e++)if(this.passes[e].enabled)return!1;return!0}render(t){t===void 0&&(t=this.clock.getDelta());const e=this.renderer.getRenderTarget();let i=!1;for(let s=0,r=this.passes.length;s<r;s++){const n=this.passes[s];if(n.enabled!==!1){if(n.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(s),n.render(this.renderer,this.writeBuffer,this.readBuffer,t,i),n.needsSwap){if(i){const h=this.renderer.getContext(),a=this.renderer.state.buffers.stencil;a.setFunc(h.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,t),a.setFunc(h.EQUAL,1,4294967295)}this.swapBuffers()}Ci!==void 0&&(n instanceof Ci?i=!0:n instanceof Ds&&(i=!1))}}this.renderer.setRenderTarget(e)}reset(t){if(t===void 0){const e=this.renderer.getSize(new F);this._pixelRatio=this.renderer.getPixelRatio(),this._width=e.width,this._height=e.height,t=this.renderTarget1.clone(),t.setSize(this._width*this._pixelRatio,this._height*this._pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(t,e){this._width=t,this._height=e;const i=this._width*this._pixelRatio,s=this._height*this._pixelRatio;this.renderTarget1.setSize(i,s),this.renderTarget2.setSize(i,s);for(let r=0;r<this.passes.length;r++)this.passes[r].setSize(i,s)}setPixelRatio(t){this._pixelRatio=t,this.setSize(this._width,this._height)}dispose(){this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.copyPass.dispose()}}class Ps extends $t{constructor(t,e,i=null,s=null,r=null){super(),this.scene=t,this.camera=e,this.overrideMaterial=i,this.clearColor=s,this.clearAlpha=r,this.clear=!0,this.clearDepth=!1,this.needsSwap=!1,this._oldClearColor=new ut}render(t,e,i){const s=t.autoClear;t.autoClear=!1;let r,n;this.overrideMaterial!==null&&(n=this.scene.overrideMaterial,this.scene.overrideMaterial=this.overrideMaterial),this.clearColor!==null&&(t.getClearColor(this._oldClearColor),t.setClearColor(this.clearColor,t.getClearAlpha())),this.clearAlpha!==null&&(r=t.getClearAlpha(),t.setClearAlpha(this.clearAlpha)),this.clearDepth==!0&&t.clearDepth(),t.setRenderTarget(this.renderToScreen?null:i),this.clear===!0&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),t.render(this.scene,this.camera),this.clearColor!==null&&t.setClearColor(this._oldClearColor),this.clearAlpha!==null&&t.setClearAlpha(r),this.overrideMaterial!==null&&(this.scene.overrideMaterial=n),t.autoClear=s}}const Is={name:"LuminosityHighPassShader",shaderID:"luminosityHighPass",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new ut(0)},defaultOpacity:{value:0}},vertexShader:`

		varying vec2 vUv;

		void main() {

			vUv = uv;

			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

		}`,fragmentShader:`

		uniform sampler2D tDiffuse;
		uniform vec3 defaultColor;
		uniform float defaultOpacity;
		uniform float luminosityThreshold;
		uniform float smoothWidth;

		varying vec2 vUv;

		void main() {

			vec4 texel = texture2D( tDiffuse, vUv );

			float v = luminance( texel.xyz );

			vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );

			float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );

			gl_FragColor = mix( outputColor, texel, alpha );

		}`};class Rt extends $t{constructor(t,e,i,s){super(),this.strength=e!==void 0?e:1,this.radius=i,this.threshold=s,this.resolution=t!==void 0?new F(t.x,t.y):new F(256,256),this.clearColor=new ut(0,0,0),this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;let r=Math.round(this.resolution.x/2),n=Math.round(this.resolution.y/2);this.renderTargetBright=new Me(r,n,{type:ge}),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(let u=0;u<this.nMips;u++){const c=new Me(r,n,{type:ge});c.texture.name="UnrealBloomPass.h"+u,c.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(c);const d=new Me(r,n,{type:ge});d.texture.name="UnrealBloomPass.v"+u,d.texture.generateMipmaps=!1,this.renderTargetsVertical.push(d),r=Math.round(r/2),n=Math.round(n/2)}const h=Is;this.highPassUniforms=Ye.clone(h.uniforms),this.highPassUniforms.luminosityThreshold.value=s,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new Ft({uniforms:this.highPassUniforms,vertexShader:h.vertexShader,fragmentShader:h.fragmentShader}),this.separableBlurMaterials=[];const a=[3,5,7,9,11];r=Math.round(this.resolution.x/2),n=Math.round(this.resolution.y/2);for(let u=0;u<this.nMips;u++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(a[u])),this.separableBlurMaterials[u].uniforms.invSize.value=new F(1/r,1/n),r=Math.round(r/2),n=Math.round(n/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=e,this.compositeMaterial.uniforms.bloomRadius.value=.1;const o=[1,.8,.6,.4,.2];this.compositeMaterial.uniforms.bloomFactors.value=o,this.bloomTintColors=[new x(1,1,1),new x(1,1,1),new x(1,1,1),new x(1,1,1),new x(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors;const l=Ni;this.copyUniforms=Ye.clone(l.uniforms),this.blendMaterial=new Ft({uniforms:this.copyUniforms,vertexShader:l.vertexShader,fragmentShader:l.fragmentShader,blending:$i,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this._oldClearColor=new ut,this.oldClearAlpha=1,this.basic=new Li,this.fsQuad=new Ui(null)}dispose(){for(let t=0;t<this.renderTargetsHorizontal.length;t++)this.renderTargetsHorizontal[t].dispose();for(let t=0;t<this.renderTargetsVertical.length;t++)this.renderTargetsVertical[t].dispose();this.renderTargetBright.dispose();for(let t=0;t<this.separableBlurMaterials.length;t++)this.separableBlurMaterials[t].dispose();this.compositeMaterial.dispose(),this.blendMaterial.dispose(),this.basic.dispose(),this.fsQuad.dispose()}setSize(t,e){let i=Math.round(t/2),s=Math.round(e/2);this.renderTargetBright.setSize(i,s);for(let r=0;r<this.nMips;r++)this.renderTargetsHorizontal[r].setSize(i,s),this.renderTargetsVertical[r].setSize(i,s),this.separableBlurMaterials[r].uniforms.invSize.value=new F(1/i,1/s),i=Math.round(i/2),s=Math.round(s/2)}render(t,e,i,s,r){t.getClearColor(this._oldClearColor),this.oldClearAlpha=t.getClearAlpha();const n=t.autoClear;t.autoClear=!1,t.setClearColor(this.clearColor,0),r&&t.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=i.texture,t.setRenderTarget(null),t.clear(),this.fsQuad.render(t)),this.highPassUniforms.tDiffuse.value=i.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,t.setRenderTarget(this.renderTargetBright),t.clear(),this.fsQuad.render(t);let h=this.renderTargetBright;for(let a=0;a<this.nMips;a++)this.fsQuad.material=this.separableBlurMaterials[a],this.separableBlurMaterials[a].uniforms.colorTexture.value=h.texture,this.separableBlurMaterials[a].uniforms.direction.value=Rt.BlurDirectionX,t.setRenderTarget(this.renderTargetsHorizontal[a]),t.clear(),this.fsQuad.render(t),this.separableBlurMaterials[a].uniforms.colorTexture.value=this.renderTargetsHorizontal[a].texture,this.separableBlurMaterials[a].uniforms.direction.value=Rt.BlurDirectionY,t.setRenderTarget(this.renderTargetsVertical[a]),t.clear(),this.fsQuad.render(t),h=this.renderTargetsVertical[a];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,t.setRenderTarget(this.renderTargetsHorizontal[0]),t.clear(),this.fsQuad.render(t),this.fsQuad.material=this.blendMaterial,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,r&&t.state.buffers.stencil.setTest(!0),this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(i),this.fsQuad.render(t)),t.setClearColor(this._oldClearColor,this.oldClearAlpha),t.autoClear=n}getSeperableBlurMaterial(t){const e=[];for(let i=0;i<t;i++)e.push(.39894*Math.exp(-.5*i*i/(t*t))/t);return new Ft({defines:{KERNEL_RADIUS:t},uniforms:{colorTexture:{value:null},invSize:{value:new F(.5,.5)},direction:{value:new F(.5,.5)},gaussianCoefficients:{value:e}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`#include <common>
				varying vec2 vUv;
				uniform sampler2D colorTexture;
				uniform vec2 invSize;
				uniform vec2 direction;
				uniform float gaussianCoefficients[KERNEL_RADIUS];

				void main() {
					float weightSum = gaussianCoefficients[0];
					vec3 diffuseSum = texture2D( colorTexture, vUv ).rgb * weightSum;
					for( int i = 1; i < KERNEL_RADIUS; i ++ ) {
						float x = float(i);
						float w = gaussianCoefficients[i];
						vec2 uvOffset = direction * invSize * x;
						vec3 sample1 = texture2D( colorTexture, vUv + uvOffset ).rgb;
						vec3 sample2 = texture2D( colorTexture, vUv - uvOffset ).rgb;
						diffuseSum += (sample1 + sample2) * w;
						weightSum += 2.0 * w;
					}
					gl_FragColor = vec4(diffuseSum/weightSum, 1.0);
				}`})}getCompositeMaterial(t){return new Ft({defines:{NUM_MIPS:t},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:`varying vec2 vUv;
				void main() {
					vUv = uv;
					gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
				}`,fragmentShader:`varying vec2 vUv;
				uniform sampler2D blurTexture1;
				uniform sampler2D blurTexture2;
				uniform sampler2D blurTexture3;
				uniform sampler2D blurTexture4;
				uniform sampler2D blurTexture5;
				uniform float bloomStrength;
				uniform float bloomRadius;
				uniform float bloomFactors[NUM_MIPS];
				uniform vec3 bloomTintColors[NUM_MIPS];

				float lerpBloomFactor(const in float factor) {
					float mirrorFactor = 1.2 - factor;
					return mix(factor, mirrorFactor, bloomRadius);
				}

				void main() {
					gl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) +
						lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) +
						lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) +
						lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) +
						lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );
				}`})}}Rt.BlurDirectionX=new F(1,0);Rt.BlurDirectionY=new F(0,1);let Ut,$,Ct,Y,be,Vi=[],Ge,Ze;async function Os(m){try{const t=await fetch(m);if(!t.ok)throw new Error("Network response was not ok");Vi=await t.json(),console.log("JSON data has been fetched and stored")}catch(t){console.error("Failed to fetch the JSON data:",t)}}let we=null;window.addEventListener("mousemove",m=>{Et.x=m.clientX/window.innerWidth*2-1,Et.y=-(m.clientY/window.innerHeight)*2+1,Vt.setFromCamera(Et,$);const t=Vt.intersectObjects(Se);if(t.length>0){const e=t[0].object;document.body.style.cursor="pointer",we=e}else document.body.style.cursor="auto",we=null});window.addEventListener("dblclick",m=>{if(we){const t=we.starData.id;window.open(`https://exosky.ndmcbd.com/app/${t}`,"_blank")}});async function Ls(){Ut=new T.Scene,$=new T.PerspectiveCamera(60,window.innerWidth/window.innerHeight,.1,15e4),$.position.z=100,Ct=new T.WebGLRenderer,Ct.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(Ct.domElement),Y=new Hi($,Ct.domElement),Y.enableDamping=!0,Y.dampingFactor=.05;const m=new T.AmbientLight(11184810);Ut.add(m);const t=new T.TextureLoader;t.load("https://www.solarsystemscope.com/textures/download/2k_jupiter.jpg"),t.crossOrigin=!0;const e=new T.SphereGeometry(4e3,32,32),i=new T.MeshBasicMaterial({map:t.load("https://i.ibb.co.com/7NZ9rWL/Gaia-EDR3-darkened.png"),side:T.BackSide});new T.Mesh(e,i),await Os("/Hosts_info-1.json"),Ge=new T.Group,Ze=new T.Group,Ws(),Ut.add(Ge),Ut.add(Ze),Ns(),qi()}function Ns(){be=new ks(Ct),be.addPass(new Ps(Ut,$));const m=new Rt(new T.Vector2(window.innerWidth,window.innerHeight),2,.5,.1);be.addPass(m)}const Se=[],Wi=[];function Us(m,t,e){const i=t,s=m,r=e*Math.sin(i)*Math.cos(s),n=e*Math.sin(i)*Math.sin(s),h=e*Math.cos(i);return{x:r,y:n,z:h}}function Vs(m){var t,e=0,i=0,s=0;return m<-.4&&(m=-.4),m>2&&(m=2),m>=-.4&&m<0?(t=(m+.4)/(0+.4),e=.61+.11*t+.1*t*t):m>=0&&m<.4?(t=(m-0)/(.4-0),e=.83+.17*t):m>=.4&&m<2.1&&(t=(m-.4)/(2.1-.4),e=1),m>=-.4&&m<0?(t=(m+.4)/(0+.4),i=.7+.07*t+.1*t*t):m>=0&&m<.4?(t=(m-0)/(.4-0),i=.87+.11*t):m>=.4&&m<1.6?(t=(m-.4)/(1.6-.4),i=.98-.16*t):m>=1.6&&m<2&&(t=(m-1.6)/(2-1.6),i=.82-.5*t*t),m>=-.4&&m<.4?(t=(m+.4)/(.4+.4),s=1):m>=.4&&m<1.5?(t=(m-.4)/(1.5-.4),s=1-.47*t+.1*t*t):m>=1.5&&m<1.94&&(t=(m-1.5)/(1.94-1.5),s=.63-.6*t*t),[e,i,s]}function Ws(){for(var m=Vi.Hosts,t=0;t<m.length;t++){var e=m[t];const n=e["BV[mag]"],h=Vs(n),a=e["Radius[R_Sun]"],o=e["RA[degree]"],l=e["Dec[degree]"],u=e["Distance[pc]"],c=.03*a;if(isNaN(o)||isNaN(l)||isNaN(u)){console.log("Star data missing/malformed: "+e.name+": "+o+", "+l+", "+u);continue}const{x:d,y:f,z:p}=Us(o,l,u),y=new T.SphereGeometry(c,16,16);var i=new T.MeshBasicMaterial({color:new T.Color(h[0],h[1],h[2])});const g=new T.Mesh(y,i);if(g.position.set(d,f,p),g.starData={id:e.ID,name:e.host_name,star_number:e.star_number,pl_number:e.planet_number,radi:e["Radius[R_Sun]"],ra:e["RA[degree]"],de:e["Dec[degree]"],dist:e["Distance[pc]"],temp:e["Temperature[K]"],met:e.Metallicity,mass:e["Mass[M_Sun]"],speck:e["Spectral Type"],lumin:e["Luminosity[L_Sun]"],age:e["Age[Gyr]"],vel:e["Velocity[m/s]"],bv:e["BV[mag]"],planets:[]},e.Planets&&e.Planets.length>0)for(var s=0;s<e.Planets.length;s++){var r=e.Planets[s];g.starData.planets.push({planet_name:r.planet_name,radius:r["Radius[R_Earth]"],mass:r["Mass[M_Earth]"],temperature:r["Temperature[K]"],semimajor_axis:r["Semimajor_axis[AU]"],eccentricity:r.Eccentricity,inclination:r["Inclination[degree]"],period:r["Period[day]"],transit_duration:r["Transit Duration[hour]"],star_id:e.ID})}Ge.add(g),Se.push(g)}}function qs(m,t){for(var e=0;e<m.length;e++){const r=m[e],n=r.planet_name;console.log(n);const h=r.radius;console.log(h);const a=r.semimajor_axis;var i=new T.SphereGeometry(h*.003,16,16),s=new T.MeshStandardMaterial({map:Hs(),roughness:.5,metalness:.3});const o=new T.Mesh(i,s),l=e*(Math.PI/m.length),u=t.x+a*3*Math.cos(l),c=t.y,d=t.z+a*3*Math.sin(l);o.planetData={name:r.planet_name,radius:r.radius,mass:r.mass,temperature:r.temperature,semimajor_axis:r.semimajor_axis,eccentricity:r.eccentricity,inclination:r.inclination,period:r.period,transit_duration:r.transit_duration,star_id:r.star_id},o.position.set(u,c,d),Ze.add(o),Wi.push(o)}}document.addEventListener("DOMContentLoaded",function(){const m=document.getElementById("searchBtn"),t=document.getElementById("searchInput");m.addEventListener("click",function(){const e=t.value.trim().toLowerCase();console.log(`Searching for star: ${e}`),Se.forEach(i=>{if(i.starData&&i.starData.name)if(i.starData.name.trim().toLowerCase()===e){const r=i.position;Y.target.set(r.x,r.y,r.z),gsap.to($.position,{duration:2,x:r.x+4,y:r.y+4,z:r.z+4,onUpdate:()=>Y.update()})}else console.log("Star name doesn't match")})})});const Vt=new T.Raycaster,Et=new T.Vector2;window.addEventListener("click",m=>{Et.x=m.clientX/window.innerWidth*2-1,Et.y=-(m.clientY/window.innerHeight)*2+1,Vt.setFromCamera(Et,$);const t=Vt.intersectObjects(Se);if(t.length>0){const e=t[0].object,i=e.position;Y.target.set(i.x,i.y,i.z),document.getElementById("hint").style.display="flex",document.getElementById("starName").innerText=`
        Star Name: ${e.starData.name}
        Radius[R_Sun]: ${e.starData.radi}
        Spectral Type: ${e.starData.speck}
        Mass[M_Sun]: ${e.starData.mass}
        Temperature[K]: ${e.starData.temp}
        Metallicity: ${e.starData.met} Fe/H
        Luminosity[L_Sun]: ${e.starData.lumin}
        Age[Gyr]: ${e.starData.age}
        Velocity: ${e.starData.vel}
        RA[Earth]: ${e.starData.ra}
        DE[Earth]: ${e.starData.de}
        Parralax[Earth]: ${e.starData.dist}
        BV: ${e.starData.bv}
    `,qs(e.starData.planets,i),gsap.to($.position,{duration:2,x:i.x+10,y:i.y+10,z:i.z+10,onUpdate:()=>Y.update()})}else{const e=Vt.intersectObjects(Wi);if(e.length>0){const i=e[0].object,s=i.position;Y.target.set(s.x,s.y,s.z),document.getElementById("starName").innerText=`
            Planet Name: ${i.planetData.name}
            Radius[R_Earth]: ${i.planetData.radius}
            Mass[M_Earth]: ${i.planetData.mass}
            Temperature[K]: ${i.planetData.temperature}
            Semimajor Axis[AU]: ${i.planetData.semimajor_axis}
            Eccentricity: ${i.planetData.eccentricity}
            Inclination[Degree]: ${i.planetData.inclination}
            Period[day]: ${i.planetData.period}
            Transit Duration[hour]: ${i.planetData.transit_duration}
            Star Id: ${i.planetData.star_id}
        `,gsap.to($.position,{duration:2,x:s.x+10,y:s.y+10,z:s.z+10,onUpdate:()=>Y.update()})}}});function Hs(){const m=[["red","yellow"],["red","blue"],["green","blue"],["green","red"],["yellow, blue"]],t=Math.floor(Math.random()*m.length),[e,i]=m[t],s=256,r=document.createElement("canvas");r.width=s,r.height=s;const n=r.getContext("2d"),h=n.createRadialGradient(s/2,s/2,s/4,s/2,s/2,s/2);return h.addColorStop(0,e),h.addColorStop(1,i),n.fillStyle=h,n.fillRect(0,0,s,s),new T.CanvasTexture(r)}function qi(){requestAnimationFrame(qi),Y.update(),be.render()}window.addEventListener("resize",()=>{Ct.setSize(window.innerWidth,window.innerHeight),$.aspect=window.innerWidth/window.innerHeight,$.updateProjectionMatrix()});document.addEventListener("DOMContentLoaded",Ls);
